
import org.junit.Test;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.assertFalse;
import java.util.Arrays;


public class JUnitInverse {
	@Test
	public void test1() {
		Inverse a = new Inverse();
		boolean flag = true;

		int[] arr1 = {1246382666, 1246382666, 1246382666, 1246382666, 1246382666, 1802399600, 1969891120, 762670965, 1785555513, 1768961909, 1764768094, 1868840253, 1785621098, 1684759408, 1752068202, 1751741290, 1784832887, 1751739255, 1751740266, 1966696742, 710494069, 1785227115, 1969838393, 2036951147, 1282100810, 691038264, 1751672178, 1999982409, 1684414565, 1919382117, 1246243916, 1952608884, 1346983226, 1347046185, 707356022, 707342381, 1852532846, 1818978654, 1765373295, 963604528, 758134841};

		int[] arr2 = {758134841, 963604528, 1765373295, 1818978654, 1852532846, 707342381, 707356022, 1347046185, 1346983226, 1952608884, 1246243916, 1919382117, 1684414565, 1999982409, 1751672178, 691038264, 1282100810, 2036951147, 1969838393, 1785227115, 710494069, 1966696742, 1751740266, 1751739255, 1784832887, 1751741290, 1752068202, 1684759408, 1785621098, 1868840253, 1764768094, 1768961909, 1785555513, 762670965, 1969891120, 1802399600, 1246382666, 1246382666, 1246382666, 1246382666, 1246382666};

		boolean b = a.Inverse(arr1, arr2);

		if (arr1.length != arr2.length)
			assertTrue("Their length is differnt and they cannot be inverse", b == false);
		else {
			for (int i = 0; i < arr1.length; i++){
				if (arr2[arr1.length-1-i] != arr1[i]){
					flag = false;
					break;
				}
			}
			assertTrue(b == flag);
		}
	}

	
	@Test
	public void test2() {
		Inverse a = new Inverse();
		boolean flag = true;

		int[] arr1 = {1651075177, 964257903, 943273849, 960002408, 1768713070, 1802399600, 1969891120, 762670965, 1785555513, 1768961909, 1764768112, 1868840253, 1785621098, 1684759408, 1752068202, 1751741290, 1784832887, 1751739255, 1751740266, 1966696823, 1903524153, 1768620032, 16735782, 710494069, 1785227115, 1969829945, 2036951147, 1852526154, 691038264, 1751672178, 1999982409, 1684414565, 1919382117, 1246251343, 1952608884, 1346983226, 1347046185, 707356022, 707342381, 1852532846, 2137745768};

		int[] arr2 = {1765373295, 963604528, 758134841, 1026383733, 1768516717, 660875388, 1063871863, 1852534640, 1230317609, 643123785, 1330136662, 1380270664, 1380600405, 673850974, 959669881, 926495031, 1966700904, 1785664104, 862809453, 1835887981, 1835885414, 1869179502, 1801789484, 2003529573, 1752578405, 1966553445, 544893547, 1847602283, 1701474154, 1882813797, 1983345977, 1969889398, 1886349928, 1668575095, 1869703791, 963994992, -164597909, 426326073, 2036951147, 1852526181, 1966682930};

		boolean b = a.Inverse(arr1, arr2);

		if (arr1.length != arr2.length)
			assertTrue("Their length is differnt and they cannot be inverse", b == false);
		else {
			for (int i = 0; i < arr1.length; i++){
				if (arr2[arr1.length-1-i] != arr1[i]){
					flag = false;
					break;
				}
			}
			assertTrue(b == flag);
		}
	}



	@Test
	public void test4() {
		Inverse a = new Inverse();
		boolean flag = true;

		int[] arr1 = {1430857301, 1413051497, 1735746153, 1751726442, 2003116154, 1701803367, 1751279904, 1685288554, 1650945568, 1802991215, 23738742, 808268854, 1062196, 1697936999, 1882500153, 271589486, 591733813, 929589352, 1751672936, 1751672936, 1751672936, 1751675958, 1735749218, 1701277496, 963987786, 1229478200, 1161390355, 1852389762, 1986291815, 65536, 1714958442, 1717987897, 813000299, 1986555749, 1966682930, 930429290, 544161392, 862806816, 1986359871, 909665638, 1949775929, 1696596070, 1753182312, 1882812277, 1886335067, 761867568, 1768971115, 1768647739, 1802525611, -2007290519, 1865248873, 764046956, 1751279983, 1395075161, 675555957, 2036886127, 1882009639, 1869772662, 1986159737, 1969422336, 1070421, 1433921539, 879063928, 1916823918, 1919446889, 992897335, 1769240936, 1980395627, 1534092416, 6645618, 1919317602, 1733645673, 1802466923, 1953446245, 1981819492, 1869479936, 2147444280, 1986451045, 1952933155, 589505315, 610825829, 1768883176, 946221874, 830039910, 1982544249, 544171381, -2073532872, 1702324345, 1714954338, 1646733174, 661353078, 1647915056, 678785637, 1752594744, 1702443126, 880174960, 879245699, 813264419, 1159988200, 1949722485, 1517707879, 1427073387, 1870012500, 1744922991, 962947434, 1971337564};

		int[] arr2 = {-1406503314, 1651861864, 1702326841, -65536, 729582437, 1869112687, 1768450408, 909260409, 845166423, 1985111383, 1920099958, 1650939221, 1768648566, 1802071865, 1695574645, 943272557, 1646294560, 122046294, 2003137126, 1701992775, 1263880008, 1429746742, 643724905, 1714976358, 946169212, 1981816937, 0, 271397482, 1852405040};

		boolean b = a.Inverse(arr1, arr2);

		if (arr1.length != arr2.length)
			assertTrue("Their length is differnt and they cannot be inverse", b == false);
		else {
			for (int i = 0; i < arr1.length; i++){
				if (arr2[arr1.length-1-i] != arr1[i]){
					flag = false;
					break;
				}
			}
			assertTrue(b == flag);
		}
	}



	@Test
	public void test5() {
		Inverse a = new Inverse();
		boolean flag = true;

		int[] arr1 = {906046826, 1696464980, 972319079, 1969383784, 1765370487, 1696623205, 1868851048, -2073428097, 1937140322, 1730240614};

		int[] arr2 = {1981834852, 808460336, 808464432, 1063989296, 808464432, 808460336, 808482678, 1869624374, 876835380, 1711243111};

		boolean b = a.Inverse(arr1, arr2);

		if (arr1.length != arr2.length)
			assertTrue("Their length is differnt and they cannot be inverse", b == false);
		else {
			for (int i = 0; i < arr1.length; i++){
				if (arr2[arr1.length-1-i] != arr1[i]){
					flag = false;
					break;
				}
			}
			assertTrue(b == flag);
		}
	}

	@Test
	public void test12() {
		Inverse a = new Inverse();
		boolean flag = true;

		int[] arr1 = {594568553, 808727401, 963194925, 947203432, 1799038325, 1751594869, 2036887657, 742288995, 1768453737, 909653048, 889858865, 875247157, 1784896306, 875786086, 1735798836, 862547488, 1701390624, 1919433011, 2037789813, 1614361458, 1983459361, 1616934176, 1986686247, 542847856, 879370331, 892616038, 1646294898, 1818588537, 1751267698, 2036690807, 963340396, 1852389431, 909718582, 2036692326, 1646291558, 1748251497, 1734767970, 1869111916, 1779001449, 1751738489, 1987208553, 964257910, 963598146, 1197827688, 1920350008, 1920559215, 1768976981, 1247104596, 543519353, 1667659111, 1768241015, 1949853283, 1650748223, 1014326134, 929526840, 1715041637, 1736013344, 1835755877, 1919579961, 1986616178, 1702260768, 1835820390, 542861938, 812463155, 897139057, 825570356, 1751790902, 1751856181, 1752774965, 1969777258, 1750802550, 1701996064, 1919245088, 812217711, 1886545250, 1830841961, 1734893943, 1869247094, 1651668587, 1768580709, 963190890, 1968924018, 1735750262, 1852470642, 1701344885, 930244975, 2083993911, 1700947314, 708386918, 1697870438, 859061364, 859059508, 825832458, 859188022, 892543094, 1768452654, 610613366, 2033793138, 1969565808, 1981837170, 1849382725, 1095910756, 1785225760, 745221742, 1818904649, 1248687973, 1684235622, 1819242088, 1768913256, 946825324, 997027435, 1869244521, 1886020978, 1869625717, 1986148409, 1919039349, 1983476328, 1701867040, 1987340647, 963982448, 996635765, 876098361, 926431604, 1966291252, 1852270112, 1713399654, 543449964, 1752264567, 1750750070, 1650940784, 759716163, 1180259413, 947219052, 1802074472, 707286087, 1431724651, 1818373152, 1835756649, 1751671401, 1799055406, 1885890658, 1731815792, 1966683703, 1865903926, 930049141, 2033659959, 2033807193, 707275093, 640944744, 1531658825, 1414690413, 543581544, 1981834040, 1769563496, 807430773, 1768257896, 1664694373, 2004432995, 1869112165, 1869182832, 962819676, 761555803, 1702196793, 812803384, 1547648889, 1735942967, 2036676980, 1965898101, 1986211173, 1920415861, 1615353144, 1196380743, 1280725582, 1784833123, 1969711461, 1970758502, 930441591, 1701734754, 1970419828, 1748464949, 879327592, 1802398314, 1780896884};

		int[] arr2 = {1780896884, 1802398314, 879327592, 1748464949, 1970419828, 1701734754, 930441591, 1970758502, 1969711461, 1784833123, 1280725582, 1196380743, 1615353144, 1920415861, 1986211173, 1965898101, 2036676980, 1735942967, 1547648889, 812803384, 1702196793, 761555803, 962819676, 1869182832, 1869112165, 2004432995, 1664694373, 1768257896, 807430773, 1769563496, 1981834040, 543581544, 1414690413, 1531658825, 640944744, 707275093, 2033807193, 2033659959, 930049141, 1865903926, 1966683703, 1731815792, 1885890658, 1799055406, 1751671401, 1835756649, 1818373152, 1431724651, 707286087, 1802074472, 947219052, 1180259413, 759716163, 1650940784, 1750750070, 1752264567, 543449964, 1713399654, 1852270112, 1966291252, 926431604, 876098361, 996635765, 963982448, 1987340647, 1701867040, 1983476328, 1919039349, 1986148409, 1869625717, 1886020978, 1869244521, 997027435, 946825324, 1768913256, 1819242088, 1684235622, 1248687973, 1818904649, 745221742, 1785225760, 1095910756, 1849382725, 1981837170, 1969565808, 2033793138, 610613366, 1768452654, 892543094, 859188022, 825832458, 859059508, 859061364, 1697870438, 708386918, 1700947314, 2083993911, 930244975, 1701344885, 1852470642, 1735750262, 1968924018, 963190890, 1768580709, 1651668587, 1869247094, 1734893943, 1830841961, 1886545250, 812217711, 1919245088, 1701996064, 1750802550, 1969777258, 1752774965, 1751856181, 1751790902, 825570356, 897139057, 812463155, 542861938, 1835820390, 1702260768, 1986616178, 1919579961, 1835755877, 1736013344, 1715041637, 929526840, 1014326134, 1650748223, 1949853283, 1768241015, 1667659111, 543519353, 1247104596, 1768976981, 1920559215, 1920350008, 1197827688, 963598146, 964257910, 1987208553, 1751738489, 1779001449, 1869111916, 1734767970, 1748251497, 1646291558, 2036692326, 909718582, 1852389431, 963340396, 2036690807, 1751267698, 1818588537, 1646294898, 892616038, 879370331, 542847856, 1986686247, 1616934176, 1983459361, 1614361458, 2037789813, 1919433011, 1701390624, 862547488, 1735798836, 875786086, 1784896306, 875247157, 889858865, 909653048, 1768453737, 742288995, 2036887657, 1751594869, 1799038325, 947203432, 963194925, 808727401, 594568553};

		boolean b = a.Inverse(arr1, arr2);

		if (arr1.length != arr2.length)
			assertTrue("Their length is differnt and they cannot be inverse", b == false);
		else {
			for (int i = 0; i < arr1.length; i++){
				if (arr2[arr1.length-1-i] != arr1[i]){
					flag = false;
					break;
				}
			}
			assertTrue(b == flag);
		}
	}



	@Test
	public void test13() {
		Inverse a = new Inverse();
		boolean flag = true;

		int[] arr1 = {1764766771, 1765370160, 758674733, 1751857957, 1969776439, 808458025, 808464432, 1282304118, 1765881908, 943000107, 825764662, 896164699, 842281839, 1718056496, 875784558, 543517046, 1785538336, 1530097716, 1780517429, 708666978, 544698988, 1702197608, 1647932025, 1701803833, 1802005614, 1765291830, 959723129, 1702192738, 543843944, 875784551, 1718968943, 1751283306, 157837672, 1769894262, 1919248697, 2036889145, 1867989575, 1701210130, 1983328370, 2036887401, 1886541130, 1430803605, 1701999975, 1768241015, 1949709878, 909522486, 909522488, 1717789284, 1799306357, 1668691815, 1949853241, 1969579897, 1981836651, 1768256106, 2000254569, 1534223734, 1882273076, 879258159, 912812852, 896039225, 896878698, 1785223968, 1986359910, 544367963, 2003398524, 553582592, 1778385250, 1920100719, 2083993911, 1700952434, 708405625, 1751267641, 1764765016, 1965910123, 543581491, 1919300404, 1014256180, 893333817, 873083702, 724972851, 712403313, 1915626623, 947288354, 947025253, 812676640, 1868983867, 1464156498, 1164208744, 1646275691, 778988650, 1211517549, 2003133543, 942813962, 908947305, 1786132594, 1702246773, 2036691555, 1701211247, 1852336495, 2036876143, 1852534634, 1751740522, 1701998448, 963999330, 943288930, 926639988, 1971322983, 1713398874, 1684566383, 2003320832, 1986160475, 1882015833, 1128683860, 1429763434, 1818978681, 1747591168, 26722, 1802265117, 544041836, 1768444002, 1584085864, 779118696, 1650932073, 959854447, -8440304, 1869378937, 925906809, 963598634, 673797414, 873097307, 1262635321, 2036889145, 1867989575, 1701210130, 1983326322, 2036885622, 537933988, 2036688995, 1985752420, 1800764789, 1987453027, 946434917, 1748041321, 1969841529, 1751333176, 1702328632, 1668636744, 1429741670, 1196380672, 22434382, 1784833123, 1969711461, 1970758502, 930441481, 151610377, 151587081, 151587110, 151615333, 1315529333, 1916302440, 930428212, 2071554155, 1854696042, 643069031, 1802135657, 1869953079, 538992759, 1685088288, 1983461477, 1970679865, 544565871, 538993970, 1731687526, 858928732, 929458031, 1651273779, 2117232185, 1768449636, 942814016, 812016487, 942813962, 908947305, 1786132594};

		int[] arr2 = {1702246773, 2036691574, 1802465840, -9018823, 1962960984, 1852186729, 1752333881, 1870215168, 16521, 1851467572, 1966700143, 1529164848, 2100557360, 875705199, 808279406, 1764042021, 623191333, 624243801, 963407163, 744645632, 745825654, 1667589943, 1769236345, 1969711458, 1780509297, 1651998720, 13363, 1768384121, 2003374116, 931226744};

		boolean b = a.Inverse(arr1, arr2);

		if (arr1.length != arr2.length)
			assertTrue("Their length is differnt and they cannot be inverse", b == false);
		else {
			for (int i = 0; i < arr1.length; i++){
				if (arr2[arr1.length-1-i] != arr1[i]){
					flag = false;
					break;
				}
			}
			assertTrue(b == flag);
		}
	}




	@Test
	public void test14() {
		Inverse a = new Inverse();
		boolean flag = true;

		int[] arr1 = {421075225, 421075225, 421075225, 421075225, 421075225, 421075225, 423113994, 738132523, 909470272, 3290182, 1868785526, 808722025, 1178169186, 1114336288, 746614188, 1818847336, 1919972665, 1396141879, 623191413, 1365385320, 2037805669, 1765374220, 3764055, 1111972710, 1752331831};

		int[] arr2 = {628259176, 2020175986, 1768515945, 1768515945, 1768501861, 1983477113, 1702000179, 875903081, 2036688944, 543847785, 1702455395, 959997303, 2100847471, 1751344495, 1769435193, 1668701229, 1684757349, 1970682160, 1919236188, 1061124455, 2019768185, 1698264181, 758740342, 1663919474, 2000188768};

		boolean b = a.Inverse(arr1, arr2);

		if (arr1.length != arr2.length)
			assertTrue("Their length is differnt and they cannot be inverse", b == false);
		else {
			for (int i = 0; i < arr1.length; i++){
				if (arr2[arr1.length-1-i] != arr1[i]){
					flag = false;
					break;
				}
			}
			assertTrue(b == flag);
		}
	}
}
