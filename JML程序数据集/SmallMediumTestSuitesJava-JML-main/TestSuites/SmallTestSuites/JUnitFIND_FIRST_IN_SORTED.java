import org.junit.Test;
import static org.junit.Assert.assertTrue;


public class JUnitFIND_FIRST_IN_SORTED {

	@Test
	public void test() {
		int key = 656565605;
		FIND_FIRST_IN_SORTED find = new FIND_FIRST_IN_SORTED();
		int[] array = {157643382, 174010413, 537549669, 537549669, 538984255, 538994720, 540768108, 541015871, 543325051, 543382383, 543385957, 543694964, 543911023, 543911025, 543963682, 544029558, 544107375, 555819297, 555819297, 555819297, 555819297, 556950836, 572662306, 572662306, 572662306, 572662306, 572662306, 572662306, 572662306, 572662306, 572662306, 572662306, 572991271, 574241338, 577793131, 578515058, 606348324, 606348324, 606348324, 606348324, 606371454, 610756718, 640035413, 641029174, 656548386, 656877351, 656877351, 656877351, 656877351, 658189411, 659696715, 661680756, 662135661, 673850922, 677325396, 678062190, 690497066, 690514286, 690514286, 690640168, 693462391, 694121768, 707406372, 707406378, 707406378, 707406378, 707406378, 707406378, 707406378, 711292790, 711882338, 712140646, 728329070, 746025318, 757672486, 758135145, 761475957, 761870637, 808269364, 808269364, 808727353, 809055285, 809055285, 809062218, 809063753, 810112313, 811755887, 811755887, 811952486, 812150890, 812807282, 812807282, 812921973, 812921973, 813000249, 813064814, 828864873, 842215527, 845379182, 845505587, 845834102, 845835885, 845835895, 846082928, 846687843, 858945390, 859072778, 862287412, 862287459, 863135283, 874539884, 875720243, 875902518, 876098408, 879192431, 879454576, 879899701, 879900008, 892757877, 894711349, 895046762, 896887394, 909522486, 909522486, 909522486, 909522486, 909522486, 909522486, 909522486, 909522486, 909522744, 909588531, 909588537, 909717865, 909717865, 926430001, 926431349, 928928293, 942287402, 942690885, 943142968, 943204906, 943208504, 943208504, 943208504, 943208504, 943208504, 943208504, 943208504, 944327245, 946370919, 946432118, 959260970, 959263540, 959277685, 959477094, 959525685, 959656552, 959722813, 959985720, 961886520, 962817893, 963130218, 963195498, 963602800, 963669834, 963983208, 976894522, 976894522, 976894522, 976894522, 976894522, 976894527, 976895806, 978340944, 991961186, 996372343, 996895822, 996964135, 1029518132, 1029518132, 1044009036, 1044270159, 1045188466, 1061043788, 1061109566, 1063480933, 1112496972, 1112952911, 1161502832, 1161975376, 1213156937, 1227380042, 1229604965, 1229606219, 1229934666, 1230006585, 1230327141, 1244146214, 1246258546, 1246318416, 1246579488, 1246579532, 1248163688, 1249586285, 1260416058, 1263364459, 1263954224, 1277645356, 1296780361, 1313491279, 1329221451, 1330791754, 1332883529, 1347052919, 1348153417, 1349073269, 1380268832, 1380268832, 1380272726, 1428715365, 1429813321, 1429820729, 1430802254, 1431135607, 1432713078, 1447186267, 1449734189, 1498704489, 1517712500, 1529640817, 1529640817, 1529891129, 1533768810, 1563636827, 1579558442, 1596992873, 1601513578, 1632970871, 1633906542, 1633908785, 1646296445, 1646733095, 1647654516, 1647654516, 1650813728, 1650815541, 1650882169, 1650944621, 1651794542, 1651794542, 1651798626, 1651925877, 1651927413, 1651927661, 1651929716, 1651929716, 1651993205, 1663069499, 1664838767, 1667853943, 1668116330, 1668179306, 1668179307, 1668182121, 1668245810, 1668637303, 1668638830, 1680045925, 1684284279, 1684300900, 1684300900, 1685283616, 1696625253, 1697914928, 1698195577, 1700950629, 1700951395, 1701077865, 1701143654, 1701208933, 1701212518, 1701279270, 1701328953, 1701406326, 1701475938, 1701605998, 1701803894, 1701869154, 1701930609, 1701984560, 1701996340, 1701997173, 1701997174, 1701998703, 1702240304, 1702245427, 1702258281, 1702259050, 1702262630, 1702312822, 1702322805, 1702322806, 1702327840, 1702327910, 1714716286, 1717925734, 1717925734, 1718056805, 1718313773, 1718577521, 1718706474, 1718707825, 1718712166, 1718712166, 1719036021, 1731343220, 1734948968, 1734963045, 1735028069, 1735796278, 1735811641, 1735812466, 1735815781, 1735877929, 1736010088, 1736011373, 1747990840, 1747990840, 1748185719, 1748252020, 1748594537, 1748596023, 1751262244, 1751279222, 1751343722, 1751807289, 1751807289, 1752055651, 1752064564, 1752070249, 1752197744, 1752526696, 1752590706, 1764572541, 1764768085, 1764911726, 1765290066, 1765304372, 1765354808, 1765370472, 1768056682, 1768256106, 1768579944, 1768643373, 1768645408, 1768648293, 1768845403, 1768847217, 1768972914, 1769107301, 1769301346, 1769367915, 1769369186, 1784899641, 1785031794, 1785031794, 1785033273, 1785227576, 1785228863, 1785280618, 1785280618, 1785293389, 1785621872, 1785624419, 1786077814, 1786143343, 1800158285, 1801137519, 1801610803, 1801661744, 1802051616, 1802070633, 1802070633, 1802072112, 1814506608, 1815749232, 1818455335, 1818980137, 1819094124, 1819243053, 1819243053, 1819243099, 1819244142, 1833510997, 1835230831, 1835364971, 1835364976, 1835755808, 1835952928, 1836019819, 1849387884, 1851929651, 1852010272, 1852010345, 1852140149, 1852140400, 1852402464, 1852403570, 1852664681, 1852667504, 1853192557, 1853252201, 1853318005, 1853318459, 1864855666, 1864982389, 1865444201, 1865444201, 1865641266, 1866018154, 1868917090, 1868920439, 1868982579, 1869034804, 1869165162, 1869166954, 1869181281, 1869243762, 1869506927, 1869506927, 1869765477, 1882403945, 1882416745, 1885039476, 1885039476, 1885697898, 1886153583, 1886284133, 1886349109, 1886349931, 1886349931, 1886730607, 1902278243, 1902539127, 1903322470, 1903650351, 1903650351, 1903650406, 1903650406, 1903650417, 1915767125, 1916102708, 1919038517, 1919038582, 1919038582, 1919051122, 1919052857, 1919055474, 1919300404, 1919378996, 1919379817, 1919709282, 1919709282, 1919903081, 1919971178, 1920213090, 1920344165, 1920344165, 1920349298, 1920361074, 1949578550, 1949656434, 1952609898, 1952936550, 1953395833, 1953653280, 1953654633, 1953659771, 1966094671, 1966565427, 1966682419, 1966698345, 1969387113, 1969387370, 1969449326, 1969561714, 1969578613, 1969633641, 1969698678, 1969778296, 1969842789, 1969906280, 1970168687, 1970235502, 1970878505, 1970878775, 1970892151, 1981837942, 1983079799, 1983589484, 1986161010, 1986163301, 1986474547, 1986554416, 1986620003, 1986749243, 1986817324, 1987013152, 1987536179, 1987536246, 2002871841, 2002871841, 2002941286, 2003072613, 2003134078, 2003134078, 2003138148, 2003185490, 2003202401, 2003329845, 2003657574, 2003919206, 2003919206, 2003919478, 2004247415, 2020174435, 2033792885, 2034706005, 2037673593, 2037737834, 2071690107, 2071690107, 2071821693, 2105281117, 2105352738, 2105373300, 2105376125, 2105376125, 2105376125, 2117828222, 2122219134, 2122219134};
		int loc = find.find_first_in_sorted(array, key);

		if(loc != -1) {
			assertTrue("The value of array's location is not equal to key", array[loc] == key);	
			for(int i = 0; i < loc; i++)
				assertTrue("There is a key value before detected location", array[i] != 0);
		} else {
			for(int i = 0; i < array.length; i++)
				assertTrue("The key value is in the array but program did not find it", array[i] != key);
		}
	}

	@Test
	public void test1() {
		int key = 892679477;
		FIND_FIRST_IN_SORTED find = new FIND_FIRST_IN_SORTED();
		int[] array = {2140773531, -286331288, 14648, 28517, 1048576, 174010413, 224093546, 455550759, 538993256, 540768108, 543323250, 543385957, 543520612, 544367990, 555819297, 555819297, 555819297, 555842427, 556950836, 571684197, 572662306, 572662306, 572662306, 572662306, 572662306, 572662306, 572662306, 572662306, 572662306, 572991271, 574241338, 595027302, 606348324, 606348324, 606348324, 607200292, 610756718, 640308522, 640312690, 641029174, 643123535, 656548386, 656565605, 656877351, 656877351, 656877351, 676678184, 678913393, 707011620, 707144306, 707406378, 707406378, 707406378, 707406378, 707406378, 707406378, 710172198, 710232143, 712140646, 745352496, 746025318, 757672486, 758330485, 761870637, 761951609, 808282424, 809063753, 810698050, 811952486, 812150890, 812544091, 813064814, 825439605, 828864873, 828993390, 845379182, 858810157, 859069228, 859069228, 859384106, 862287412, 862482025, 863135283, 874524778, 874539884, 875720243, 875904349, 875904349, 875917942, 879192431, 879299167, 879454576, 879900008, 880095289, 880095289, 880156682, 880156682, 892679477, 892679477, 892679477, 892679477, 892679477, 892679477, 892745270, 892757877, 894711349, 895046762, 895644786, 895973641, 896021607, 896887394, 909391417, 909522486, 909522486, 909522486, 909541120, 909588531, 913601122, 913601122, 929575730, 942879079, 943142968, 943208504, 943208504, 943208504, 943208538, 943224121, 943286134, 946353202, 946497584, 959260970, 959264823, 959656552, 959722813, 959935800, 959990090, 959998058, 961497677, 961890645, 963207756, 963274809, 963602795, 963981369, 975335532, 976894522, 976894522, 976894522, 976894522, 976894522, 976894527, 976895806, 978340944, 991981659, 991981659, 992767077, 996372343, 996372343, 1011699514, 1027285543, 1044009036, 1061109310, 1161502832, 1161975376, 1162499650, 1214607990, 1229934666, 1230322005, 1230327141, 1244146214, 1263290698, 1263364459, 1263954224, 1277645356, 1279871560, 1280274992, 1296769132, 1298481152, 1313427561, 1313491279, 1330269515, 1330325599, 1330530640, 1330791754, 1331383335, 1347041648, 1347052919, 1348153417, 1378182774, 1378634582, 1428703867, 1431135607, 1432713078, 1447186267, 1448103762, 1498704489, 1517712500, 1529704231, 1529891129, 1533375084, 1533375084, 1533768810, 1563636827, 1633906555, 1634085160, 1634085160, 1646733095, 1647588197, 1647916088, 1651077743, 1651401252, 1651401269, 1651664231, 1651794546, 1651860329, 1651861103, 1661560178, 1663069499, 1663905893, 1664316722, 1664447074, 1664838762, 1664838767, 1666936626, 1667394187, 1667774837, 1667855983, 1668116330, 1668179307, 1668179307, 1668227104, 1668769142, 1677748073, 1684300835, 1684300900, 1684302128, 1698195577, 1700950629, 1701143654, 1701209974, 1701279270, 1701405287, 1701406326, 1701475682, 1701475938, 1701605998, 1701983586, 1701997417, 1702000226, 1702000481, 1702240304, 1702257757, 1702258484, 1702259050, 1702262630, 1702322769, 1702324290, 1702327927, 1713464933, 1713464933, 1714377285, 1714377285, 1714631712, 1714716286, 1715038514, 1717991281, 1717991281, 1718186085, 1718313773, 1718317431, 1718712161, 1718712166, 1719040373, 1719562615, 1731343216, 1731540075, 1731687993, 1734751346, 1734948968, 1734961509, 1735877929, 1746957364, 1748200046, 1748252532, 1748594537, 1751262244, 1751279222, 1752064564, 1752526696, 1752529223, 1763713087, 1764765033, 1764768085, 1764911726, 1765290066, 1765373232, 1768256106, 1768322663, 1768453664, 1768579872, 1768580471, 1768636520, 1768643373, 1768844137, 1768844137, 1768894580, 1768894580, 1768908088, 1768909417, 1768960104, 1768972914, 1769038165, 1769956708, 1780496222, 1781545315, 1784834165, 1785165421, 1785227576, 1785293389, 1785294957, 1785294959, 1785425712, 1785554290, 1785621867, 1786143333, 1797287529, 1797288546, 1798138469, 1801661744, 1802055725, 1802260042, 1802268521, 1802268967, 1802315621, 1802396987, 1802447199, 1802791525, 1814506608, 1815687220, 1819243099, 1819244142, 1819420198, 1819438710, 1819748195, 1831627887, 1832613484, 1833510997, 1835230831, 1836478496, 1848869999, 1849387884, 1849647982, 1852140400, 1852140400, 1852514422, 1852534629, 1852665915, 1852860773, 1853321570, 1853385066, 1864855666, 1865296168, 1865641266, 1866018129, 1868920439, 1868920680, 1868982579, 1869114939, 1869166954, 1869181045, 1869638501, 1869768040, 1870032489, 1882403945, 1882416745, 1882416745, 1885498368, 1885498479, 1886023731, 1886284133, 1886349109, 1886349925, 1886417008, 1886417008, 1886417008, 1886417008, 1886417008, 1886418034, 1886549090, 1886730607, 1886806585, 1894872628, 1902193253, 1902539122, 1903650417, 1915564130, 1915564130, 1915970934, 1916039732, 1916350581, 1919033387, 1919055474, 1919248246, 1919579493, 1920229920, 1920230006, 1920230006, 1920344165, 1949656434, 1952609898, 1952936550, 1953653364, 1953653364, 1953653364, 1953654633, 1965582952, 1966682226, 1966682226, 1969561714, 1970878505, 1970878775, 1981837942, 1981948450, 1982215735, 1983132530, 1983459635, 1986159986, 1986161010, 1986162489, 1986229608, 1986361206, 1986474547, 1986622070, 1986622821, 1986686281, 1986749243, 1986817324, 1986945641, 1987533931, 2000385645, 2001630820, 2002941472, 2003004780, 2003006818, 2003118421, 2003123052, 2003134065, 2003185490, 2003202423, 2003202423, 2003203941, 2003203941, 2003462518, 2003465582, 2003657574, 2003723119, 2003920497, 2003920497, 2004230253, 2004248167, 2036951150, 2037673593, 2037737834, 2071666786, 2071670832, 2071687796, 2071690107, 2071690107, 2071690107, 2071690122, 2105376125, 2105376125, 2105376125, 2105376125, 2117828222, 2122195233, 2122219134, 2122219134};
		int loc = find.find_first_in_sorted(array, key);

		if(loc != -1) {
			assertTrue("The value of array's location is not equal to key", array[loc] == key);	
			for(int i = 0; i < loc; i++)
				assertTrue("There is a key value before detected location", array[i] != 0);
		} else {
			for(int i = 0; i < array.length; i++)
				assertTrue("The key value is in the array but program did not find it", array[i] != key);
		}
	}


	@Test
	public void test2() {
		int key = -246087680;
		FIND_FIRST_IN_SORTED find = new FIND_FIRST_IN_SORTED();
		int[] array = {-2061474441, -246087680, -246087680, 377911655, 537549669, 537549669, 543911023, 543911023, 544029558, 544042864, 544367220, 544372314, 544619308, 551703796, 555819323, 572662306, 572662306, 572662306, 574241338, 595027302, 640035413, 640035413, 641029174, 656548386, 656877351, 659696715, 659696715, 661680756, 673589861, 673850922, 690514286, 690514286, 693462391, 707405354, 707406378, 707406378, 707406378, 710223946, 711292790, 759004541, 808269364, 809055285, 809062218, 809062218, 809068907, 811755887, 811755887, 811952486, 812275029, 812921973, 813000249, 846082928, 846082928, 859072778, 859072778, 862287734, 875772201, 875918440, 879916146, 895046762, 926430001, 926430001, 926431349, 926431349, 942690885, 942699077, 942893166, 946370919, 959260962, 959277685, 959525685, 959525685, 963602800, 963602800, 976893556, 976894522, 976894522, 976894522, 976894527, 978275112, 996895822, 1044009008, 1060712809, 1112496972, 1112952911, 1112988239, 1193694537, 1213156937, 1213156937, 1227380042, 1230327141, 1246258546, 1246258546, 1246318416, 1248163688, 1263364459, 1279020367, 1296780361, 1296780361, 1330661945, 1348153417, 1349073269, 1349073269, 1353602292, 1380272726, 1380272726, 1428715365, 1429879354, 1431655765, 1432713078, 1449734189, 1449734189, 1582441830, 1596609650, 1596992873, 1596992873, 1646535716, 1646733095, 1647588722, 1647654516, 1650815588, 1650882169, 1650944621, 1651259696, 1651794542, 1651927661, 1668244855, 1668821298, 1680045925, 1684284279, 1684300900, 1684300900, 1684300900, 1685480823, 1699699532, 1700950629, 1701065524, 1701209974, 1701212518, 1701519470, 1701930609, 1701983586, 1701996340, 1701998703, 1702000481, 1702245427, 1702245427, 1702257764, 1702324841, 1702327910, 1713464948, 1717925734, 1717925734, 1717986917, 1717986918, 1718056805, 1718313773, 1718706474, 1718707825, 1734897273, 1734963045, 1734963045, 1735550580, 1735796278, 1735796278, 1735812466, 1735815781, 1735877929, 1736010088, 1736010088, 1747990840, 1748330548, 1748515175, 1751332210, 1751789625, 1751807289, 1752197744, 1752197744, 1764768085, 1764892786, 1765304372, 1765304372, 1765354808, 1765354808, 1765370472, 1765370474, 1768256106, 1768647540, 1768648296, 1768911461, 1785031794, 1785033273, 1785227576, 1785280618, 1785293389, 1786143343, 1786801289, 1801136682, 1801137519, 1801794592, 1802070633, 1802071913, 1802072112, 1802072112, 1818589046, 1819094124, 1819243053, 1819243053, 1851924531, 1851929651, 1853127022, 1853257065, 1865444201, 1865453931, 1868920439, 1869034804, 1869034804, 1869181281, 1869226039, 1869573999, 1869573999, 1869573999, 1869573999, 1869765477, 1869772386, 1870096751, 1886341673, 1886349931, 1886349931, 1902539122, 1902539127, 1903322501, 1903650406, 1903650406, 1916024167, 1916102708, 1919033387, 1919038582, 1919038582, 1919248246, 1919300404, 1919300404, 1919378996, 1919378996, 1919579746, 1919709282, 1919709282, 1919903081, 1935872097, 1949656434, 1952672118, 1953397108, 1953654633, 1966698345, 1966698345, 1969561714, 1969842789, 1969906280, 1969906280, 1970235502, 1970235502, 1970878505, 1970892149, 1980789349, 1986148660, 1986163301, 1986230117, 1986423152, 1986474547, 1986557305, 1986620003, 1986620261, 1986622070, 1987343474, 1987536246, 2002871841, 2002871841, 2002941286, 2003121014, 2003134078, 2003134078, 2003138148, 2003202401, 2003657574, 2003919206, 2003919206, 2033792872, 2037217142, 2037280105, 2066509117, 2081053986, 2122219134};
		int loc = find.find_first_in_sorted(array, key);

		if(loc != -1) {
			assertTrue("The value of array's location is not equal to key", array[loc] == key);	
			for(int i = 0; i < loc; i++)
				assertTrue("There is a key value before detected location", array[i] != 0);
		} else {
			for(int i = 0; i < array.length; i++)
				assertTrue("The key value is in the array but program did not find it", array[i] != key);
		}
	}


	@Test
	public void test3() {
		int key = -246087680;
		FIND_FIRST_IN_SORTED find = new FIND_FIRST_IN_SORTED();
		int[] array = {-2061474441, -246087680, -246087680, 377911655, 537549669, 537549669, 543911023, 543911023, 544029558, 544042864, 544367220, 544372314, 544619308, 551703796, 555819323, 572662306, 572662306, 572662306, 574241338, 595027302, 640035413, 640035413, 641029174, 656548386, 656877351, 659696715, 659696715, 661680756, 673589861, 673850922, 690514286, 690514286, 693462391, 707405354, 707406378, 707406378, 707406378, 710223946, 711292790, 759004541, 808269364, 809055285, 809062218, 809062218, 809068907, 811755887, 811755887, 811952486, 812275029, 812921973, 813000249, 846082928, 846082928, 859072778, 859072778, 862287734, 875772201, 875918440, 879916146, 895046762, 926430001, 926430001, 926431349, 926431349, 942690885, 942699077, 942893166, 946370919, 959260962, 959277685, 959525685, 959525685, 963602800, 963602800, 976893556, 976894522, 976894522, 976894522, 976894527, 978275112, 996895822, 1044009008, 1060712809, 1112496972, 1112952911, 1112988239, 1193694537, 1213156937, 1213156937, 1227380042, 1230327141, 1246258546, 1246258546, 1246318416, 1248163688, 1263364459, 1279020367, 1296780361, 1296780361, 1330661945, 1348153417, 1349073269, 1349073269, 1353602292, 1380272726, 1380272726, 1428715365, 1429879354, 1431655765, 1432713078, 1449734189, 1449734189, 1582441830, 1596609650, 1596992873, 1596992873, 1646535716, 1646733095, 1647588722, 1647654516, 1650815588, 1650882169, 1650944621, 1651259696, 1651794542, 1651927661, 1668244855, 1668821298, 1680045925, 1684284279, 1684300900, 1684300900, 1684300900, 1685480823, 1699699532, 1700950629, 1701065524, 1701209974, 1701212518, 1701519470, 1701930609, 1701983586, 1701996340, 1701998703, 1702000481, 1702245427, 1702245427, 1702257764, 1702324841, 1702327910, 1713464948, 1717925734, 1717925734, 1717986917, 1717986918, 1718056805, 1718313773, 1718706474, 1718707825, 1734897273, 1734963045, 1734963045, 1735550580, 1735796278, 1735796278, 1735812466, 1735815781, 1735877929, 1736010088, 1736010088, 1747990840, 1748330548, 1748515175, 1751332210, 1751789625, 1751807289, 1752197744, 1752197744, 1764768085, 1764892786, 1765304372, 1765304372, 1765354808, 1765354808, 1765370472, 1765370474, 1768256106, 1768647540, 1768648296, 1768911461, 1785031794, 1785033273, 1785227576, 1785280618, 1785293389, 1786143343, 1786801289, 1801136682, 1801137519, 1801794592, 1802070633, 1802071913, 1802072112, 1802072112, 1818589046, 1819094124, 1819243053, 1819243053, 1851924531, 1851929651, 1853127022, 1853257065, 1865444201, 1865453931, 1868920439, 1869034804, 1869034804, 1869181281, 1869226039, 1869573999, 1869573999, 1869573999, 1869573999, 1869765477, 1869772386, 1870096751, 1886341673, 1886349931, 1886349931, 1902539122, 1902539127, 1903322501, 1903650406, 1903650406, 1916024167, 1916102708, 1919033387, 1919038582, 1919038582, 1919248246, 1919300404, 1919300404, 1919378996, 1919378996, 1919579746, 1919709282, 1919709282, 1919903081, 1935872097, 1949656434, 1952672118, 1953397108, 1953654633, 1966698345, 1966698345, 1969561714, 1969842789, 1969906280, 1969906280, 1970235502, 1970235502, 1970878505, 1970892149, 1980789349, 1986148660, 1986163301, 1986230117, 1986423152, 1986474547, 1986557305, 1986620003, 1986620261, 1986622070, 1987343474, 1987536246, 2002871841, 2002871841, 2002941286, 2003121014, 2003134078, 2003134078, 2003138148, 2003202401, 2003657574, 2003919206, 2003919206, 2033792872, 2037217142, 2037280105, 2066509117, 2081053986, 2122219134};
		int loc = find.find_first_in_sorted(array, key);

		if(loc != -1) {
			assertTrue("The value of array's location is not equal to key", array[loc] == key);	
			for(int i = 0; i < loc; i++)
				assertTrue("There is a key value before detected location", array[i] != 0);
		} else {
			for(int i = 0; i < array.length; i++)
				assertTrue("The key value is in the array but program did not find it", array[i] != key);
		}
	}
}
