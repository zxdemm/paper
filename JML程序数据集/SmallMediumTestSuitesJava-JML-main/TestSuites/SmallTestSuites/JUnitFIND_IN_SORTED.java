import org.junit.Test;
import static org.junit.Assert.assertTrue;


public class JUnitFIND_IN_SORTED {
	@Test
	public void test() {
		int key = 1549556828;
		FIND_IN_SORTED find = new FIND_IN_SORTED();
		int[] array = {168451164, 168451164, 173825116, 173825116, 173825116, 173825116, 1544161884, 1544161884, 1544182876, 1544182876, 1544182876, 1549535754, 1549535836, 1549535836, 1549535836, 1549556746, 1549556746, 1549556746, 1549556746, 1549556746, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828, 1549556828};
		int loc = find.find_in_sorted(array, key);

		if(loc != -1) {
			assertTrue("The value of array's location is not equal to the key value", array[loc] == key);	
		} else {
			for(int i = 0; i < array.length; i++)
				assertTrue("The key value is in the array, but program did not find it", array[i] != key);
		}
	}

	@Test
	public void test1() {
		int key = 243204096;
		FIND_IN_SORTED find = new FIND_IN_SORTED();
		int[] array = {-2146369536, -1871049217, -1871049217, -380305408, -380305408, -301989888, -218103808, -16777216, -16777216, -2162688, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 7, 127, 255, 256, 57856, 59904, 60416, 65535, 65535, 65536, 65536, 65536, 131072, 983040, 1048576, 1048576, 1048576, 14614528, 16769280, 16777215, 134217728, 268435456, 536870912, 570425344, 1073741824};
		int loc = find.find_in_sorted(array, key);

		if(loc != -1) {
			assertTrue("The value of array's location is not equal to the key value", array[loc] == key);	
		} else {
			for(int i = 0; i < array.length; i++)
				assertTrue("The key value is in the array, but program did not find it", array[i] != key);
		}
	}
}
